#!/bin/sh

name="lua"
version="5.3.3"
filename="${name}-${version}.tar.gz"
patch0="lua-5.3.3-shared_library-1.patch"
arch="${ARCH:-`uname -m`}"
rev="1"
hostgcc=`gcc -dumpmachine`
cwd=`pwd`
tmpdir="/tmp"
pkgdir="${tmpdir}/${name}-${version}-install"

case "${arch}" in
  i486|i686)	SLKCFLAGS="-O2 -march=i486 -mtune=i686"
		SLKLDFLAGS=""; LIBDIRSUFFIX=""
		;;
  x86_64)	SLKCFLAGS="-O2 -fPIC"
		SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
		;;
  athlon-xp)	SLKCFLAGS="-march=athlon-xp -O3 -pipe -fomit-frame-pointer"
		SLKLDFLAGS=""; LIBDIRSUFFIX=""
		;;
esac

boldecho() {
	echo -e "\n\033[1m$1\033[0m" && sleep 1
}

do_exit() {
	boldecho "Exiting due error or interrupt"
	exit 1
}

do_unpack(){
	test -f ${cwd}/${filename} || return 1
	boldecho "Unpacking"
	a="z"
	echo "${filename}" | grep -q '.tar.bz2' && a="j"
	tar xvf${a} "${cwd}/${filename}" || return 1
	return 0
}

do_patch() {
	boldecho "Patching"
	test -f ${cwd}/${patch0} || return 1
	patch -p1 < ${cwd}/${patch0} || return 1
	return 0;
}

do_make() {
	boldecho "Running make"
	sed -i "s|/usr/local|/usr|" src/luaconf.h
	sed -i "s|lib/lua|lib$LIBDIRSUFFIX/lua|" src/luaconf.h
	LDFLAGS="$SLKLDFLAGS" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	MYCFLAGS="$SLKCFLAGS" \
	make linux \
	INSTALL_TOP="/usr" \
	INSTALL_LIB="/usr/lib${LIBDIRSUFFIX}" \
	INSTALL_MAN="/usr/man/man1" \
	INSTALL_CMOD="/usr/lib${LIBDIRSUFFIX}/${name}/$(echo ${version} | egrep -o '[0-9]+\.[0-9]+')" \
	MYLIBS=-lncurses || return 1
	return 0
}

do_install() {
	boldecho "Installing"
	LDFLAGS="$SLKLDFLAGS" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	MYCFLAGS="$SLKCFLAGS" \
	make install \
	INSTALL_TOP="${pkgdir}/usr" \
	INSTALL_LIB="${pkgdir}/usr/lib${LIBDIRSUFFIX}" \
	INSTALL_MAN="${pkgdir}/usr/man/man1" \
	INSTALL_CMOD="${pkgdir}/usr/lib${LIBDIRSUFFIX}/${name}/$(echo ${version} | egrep -o '[0-9]+\.[0-9]+')" \
       	MYLIBS=-lncurses || return 1
	cp -a src/liblua.so.${version} ${pkgdir}/usr/lib${LIBDIRSUFFIX}
	( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
		ln -s liblua.so.${version} liblua.so.$(echo ${version} | egrep -o '[0-9]+\.[0-9]+')
		ln -s liblua.so.${version} liblua.so.$(echo ${version} | cut -d. -f1)
		ln -s liblua.so.${version} liblua.so
	)
	mkdir -p ${pkgdir}/usr/lib${LIBDIRSUFFIX}/pkgconfig
	make pc \
	INSTALL_TOP="${pkgdir}/usr" \
	INSTALL_LIB="${pkgdir}/usr/lib${LIBDIRSUFFIX}" \
	INSTALL_MAN="${pkgdir}/usr/man/man1" \
	INSTALL_CMOD="/usr/lib${LIBDIRSUFFIX}/${name}/$(echo ${version} | egrep -o '[0-9]+\.[0-9]+')" \
	MYLIBS=-lncurses > ${pkgdir}/usr/lib${LIBDIRSUFFIX}/pkgconfig/lua.pc
	return 0
}

do_man() {
	boldecho "Processing man pages"
	for i in {1..9} n m
	do
		rm -vf ${pkgdir}/usr/man/man${i}/*.gz
		( test -d ${pkgdir}/usr/man/man${i} && cd ${pkgdir}/usr/man/man${i} && gzip -v * )
	done
	return 0
}

do_doc() {
	mkdir -p ${pkgdir}/usr/doc/${name}-${version}/{extras,html}
	cp -a README ${pkgdir}/usr/doc/${name}-${version}
	cp -a doc/*.html doc/logo.gif doc/lua.css ${pkgdir}/usr/doc/${name}-${version}/html
	cat ${cwd}/${name}.SlackBuild > ${pkgdir}/usr/doc/${name}-${version}/${name}.SlackBuild
}

do_strip(){
	boldecho "Stripping"
	find "${pkgdir}" | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip -v --strip-unneeded 2> /dev/null
	find "${pkgdir}" | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip -v --strip-unneeded 2> /dev/null
	return 0
}

do_descr() {
	boldecho "Making description"
	mkdir -p "${pkgdir}/install"
	cat ${cwd}/slack-desc > ${pkgdir}/install/slack-desc
}

do_clean() {
	rm -rf "${pkgdir}" "${tmpdir}/${name}-${version}"
}

boldecho "${name}.SlackBuild for ${filename}"

if [ ${UID} != 0 ]
then
	boldecho "You must be root to use this script" && do_exit
fi

if [ -d "${tmpdir}/${name}-${version}" ]
then
	boldecho "Found previous build directory. Removing."
	rm -rf "${tmpdir}/${name}-${version}"
fi

if [ ! -r "${filename}" ]
then
	boldecho "Cannot locate ${filename}" || do_exit
fi

trap 'do_clean; do_exit' TERM INT

cd "${tmpdir}" || do_exit
do_unpack || do_exit
cd "${name}-${version}" || do_exit
chown -R root:root . || do_exit
do_patch || do_exit
do_make || do_exit
do_install || do_exit
do_man
do_doc
do_strip
do_descr
cd "${pkgdir}" || do_exit
/sbin/makepkg -l y -c n "${tmpdir}/${name}-`echo ${version} | tr -d '-'`-${arch}-${rev}.txz" || do_exit
cd "${cwd}" || do_exit
do_clean
boldecho "Done"
exit 0
